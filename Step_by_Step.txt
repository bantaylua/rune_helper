This file is a description about road map step to step and checking it finished or not.
The core of this project is included 
    - Import the rune database from SWEX - See https://github.com/Xzandro/sw-exporter#developing-plugins for more information.
    - Make a list of condition in a settings for filter the runes 
        - 1st layer is base of the value of the runes 
        - 2nd layer is the synergies of subs in the runes 
        - 3rd layer is the synergies with the set of runes(but this will be in later if this app is supported)
    - Notification if the rune need to be sell or keep 
First of all, we need a database base.

We will be started at a new player. So we will have a lowest grade and quality of runes.

That will be a Normal 1 star runes then up to Legend 6 star runes. 

// Some of idea 
Function: Grade check 
    If (Grade < 5)
        then [Sell_Runes]
        // Sell_Runes is a function too.
    Else [Temp_Keep]
    // Temp_Keep is a function too. 

    If (Grade < 5)
        then Rune.Sell 
    Else Rune.Temp 

    Call Rune in Rune.Temp 
        If (Rune.Rarity < Rare)
            then Rune.Sell 
        Else Rune.Temp 

Filter: Rune 2/ 4/ 6
    If (Rune.Slot = 2/ 4/ 6)
        then Rune.TempRemove 
    Else Rune.Temp 
    >> DB has only Slot 1/ 3/ 5

    If (Rune.Grade = 5)
        Flat_count = 0
        For (i = 1; i <= Number of Subs; i++)
            if (Sub[i] = Flat)
                then (Flat_count++)
        If (Flat_count >= 2)
            then Rune.Sell 
    Else Rune.Grade = 6
        If (Rune.Rarity = Legend)
            Rune.Manual/ Skip 
        Else If (Flat_count >= 2)
            Rune.Sell 
            // DB is only 5* 6* with percentage subs 
            // 6* Legend 2+ Flat subs is skip 

Roll checker
    If (Rune.Grade = 6)
        then if (Rune.Rarity = Legend)
            then Rune.Manual/ Skip 
    If (Rune.Grade = 5)
        If (Rune.Upgrade = 3)
            then Do (Sub.Attribute[i] >= Column)
                while (i = 0; i < Number of Subs; i++)

// DB 5* 6* (1/ 3/ 5 slot; 1- Flat sub)
    >> Check base on 6* stats 

Should go path 
    Min base +9 > Min base +6 > Min base +3 
    // This only applied for 5*
    Path for 6*
        Filter Base > Filter Value 1 > Filter Value 2 > Filter value 3 > Filter value 4 

    Other path 
        Base > Check +3 > Pass > Check +6 > Pass > Check +9 > Pass > Check +12

    5* 
        Check base > Check +3 > Check +6 > Check +9
    6*
        Skip > Check +3 > Check +6 > Check +9
    
Function Check_Base_Value (Rune.Grade)
    If (Rune.Grade = 6)
        > Return True;
    If (Rune.Grade = 5)
        then If (Rune.Rarity = Rare)
            Return True
                When if (one in all sub pass)
                    Do (Check sub[i] >= List.5* Min Rare Value.Sub)
                    Else 
                        Do (Check sub[i] >= List.5* Min Epic Value.Sub)

    Rune 
    +Grade 
    +Upgrade (1 - 15)
    +Rarity 
    +Slot 
    +Main_stat

    -Sell 
    -Temp 
    -Roll 
    -Keep 
    -TempRemove
    -Manual/ Skip 

    Rarity
    +Number of Subs 

    Normal: No sub
    Magic: Sub slot 1
    Rare: Sub slot 1, 2
    Epic: Sub slot 1, 2, 3
    Legend: Sub slot 1, 2, 3, 4
    